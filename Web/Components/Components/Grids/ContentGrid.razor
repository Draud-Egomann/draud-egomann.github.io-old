@using Web.Models

<div class="w-full relative own-bg-secondary @(Class)">
  <div class="container flex flex-wrap lg:flex-nowrap justify-around items-center gap-8 py-12">
    <div class="w-full lg:w-1/4 flex flex-col items-center gap-8 mx-8 px-12 lg:px-0">
      <Heading Size="HeadingSize.Is2" Class="text-white">
        @MainTitle
      </Heading>

      <Paragraph Class="text-white">
        @MainText
      </Paragraph>
    </div>

    <div class="w-full lg:w-3/4 flex flex-wrap justify-center">
      @foreach (var item in MediaItems) {
        <div class="@($"w-full sm:w-1/2 p-8 flex justify-center items-center {(MediaItems.IndexOf(item) % 2 == 0 ? "lg:justify-end" : "lg:justify-start")}")">
          <div class="relative bg-gray-600 rounded-lg w-full max-w-[368px] h-[256px] overflow-hidden">

            <Button Type="ButtonType.Link" To=@item.LinkUrl Class="relative w-full h-full rounded-lg overflow-hidden p-8">
              @* Separate text and image to separate hover effects *@
              <div class="absolute inset-0 bgImg bg-[url('@item.ImageUrl')] transform-gpu duration-300 hover:scale-125 @(item.ImageClass)"></div>

              @if (!string.IsNullOrEmpty(item.Title)) {
                <div class="absolute bottom-8 left-8 flex items-center gap-4">
                  <Icon Name="IconName.ArrowRight" IconSize="IconSize.Large" TextColor="TextColor.White" />
                  <p class="text-xl text-white">
                    @item.Title
                  </p>
                </div>
              }
            </Button>

          </div>
        </div>
      }
    </div>
  </div>
</div>

@code {
  [Parameter]
  public string Class { get; set; } = string.Empty;

  [Parameter]
  [EditorRequired]
  public string MainTitle { get; set; } = default!;

  [Parameter]
  [EditorRequired]
  public string MainText { get; set; } = default!;

  [Parameter]
  [EditorRequired]
  public List<MediaItem> MediaItems { get; set; } = default!;
}
