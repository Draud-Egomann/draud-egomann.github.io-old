@using Web.Models

<div class="w-full sm:w-[48%] xl:w-[24%] min-h-52 relative flex flex-wrap items-stretch border-8 border-t-0 border-transparent flip-box @(Class)">
  <div class="bg-gray-600 z-10 front rounded-xl p-4 sm:p-0">
    <DisplayHeading Size="DisplayHeadingSize.Is4" Class="content text-black">
      @Card.FrontText
    </DisplayHeading>
  </div>

  <div class="back own-bg-secondary rounded-xl"
       style="background-image: url(@Card.ImageUrl);">
    @if (!string.IsNullOrEmpty(Card.BackText)) {
      <DisplayHeading Size="DisplayHeadingSize.Is4" Class="content text-white">
        @Card.BackText
      </DisplayHeading>
    }
  </div>
</div>

<style>
  .flip-box:hover .back {
    transform: rotateY(0deg);
    z-index: 10;
  }

  .flip-box:hover .front {
    transform: rotateY(180deg);
    z-index: -1;
  }

  .back,
  .front {
    position: relative;
    display: flex;
    justify-content: center;
    align-content: center;
    flex: 0 0 100%;
    -webkit-transition: all 1s cubic-bezier(0.5, 1, 0.5, 1);
    transition: all 1s cubic-bezier(0.5, 1.3, 0.5, 1.3);
    transform-style: preserve-3d;
    background-size: cover;
    background-position: center;
  }

  .back {
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 100%;
    z-index: -1;
    transform: rotateY(-180deg);
  }

  .content {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    -webkit-transform: translateZ(50px);
    transform: translateZ(50px);
    text-shadow: 0px 0px 2px black;
    text-align: center;
  }
</style>

@code {
  [Parameter]
  public string Class { get; set; } = string.Empty;

  [Parameter]
  [EditorRequired]
  public FlipCardItem Card { get; set; } = default!;

  protected override void OnInitialized() {
    base.OnInitialized();
  }
}
