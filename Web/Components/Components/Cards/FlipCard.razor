@using Web.Models

<div @onclick=SetCurrentCard class="w-full sm:w-[48%] xl:w-[24%] min-h-52 relative flex flex-wrap items-stretch border-8 border-t-0 border-transparent flip-box @(Class)">
  <div class="bg-gray-600 z-10 front rounded-xl p-4 sm:p-0">
    <DisplayHeading Size="DisplayHeadingSize.Is4" Class="content text-black">
      @Card.FrontText
    </DisplayHeading>
  </div>

  <div class="back own-bg-secondary rounded-xl"
       style="background-image: url(@Card.ImageUrl);">
    @if (!string.IsNullOrEmpty(Card.BackText)) {
      <DisplayHeading Size="DisplayHeadingSize.Is4" Class="content text-white">
        @Card.BackText
      </DisplayHeading>
    }
  </div>
</div>

@code {
  [Parameter]
  public string Class { get; set; } = string.Empty;

  [Parameter]
  [EditorRequired]
  public FlipCardItem Card { get; set; } = default!;

  [Parameter]
  [EditorRequired]
  public EventCallback<FlipCardItem> OnCardClicked { get; set; }

  protected override void OnInitialized() {
    base.OnInitialized();
  }

  private void SetCurrentCard() {
    OnCardClicked.InvokeAsync(Card);
  }
}
